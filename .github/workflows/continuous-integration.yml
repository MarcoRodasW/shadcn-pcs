name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      pnpm_cache_dir: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@ebcfd6995dade4b0104ac774445cef8b3b4635b0
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Setup pnpm cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: Setup nextjs build cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install Dependencies
        run: pnpm install

      - name: Check Build
        run: pnpm build

  lint:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      pnpm_cache_dir: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@ebcfd6995dade4b0104ac774445cef8b3b4635b0
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Setup pnpm cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Run ESLint
        run: pnpm lint

  prettier-check:
    runs-on: ubuntu-latest
    needs: lint
    outputs:
      pnpm_cache_dir: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@ebcfd6995dade4b0104ac774445cef8b3b4635b0
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: Setup pnpm cache
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Run Prettier Check
        run: pnpm format:check
